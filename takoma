#!/usr/bin/env bash
TAKOMA_CONFIG="$HOME/.takoma.json"
TAKOMA_CACHE="$HOME/.takoma_current_version"
TAKOMA_VERSION="0.2"

package=""
target=""

hash jq 2>/dev/null || { echo >&2 "Takoma needs 'jq' to be installed.  Aborting."; exit 1; }


show_usage_message()
{
	cat << EOF
Takoma, version $TAKOMA_VERSION
Usage:
   help, -h     Display this help message.
   list         List takoma environments.
   switch <env> Switch environment.
   current      Show current environment.
   install      Generate empty .takoma.json file.
EOF
}

while getopts ":h" opt; do
  case ${opt} in
      h )
          show_usage_message
      ;;
   \? )
     echo "Invalid Option: -$OPTARG" 1>&2
     exit 1
     ;;
  esac
done
shift $((OPTIND -1))

# This is where magic happens, use jq to parse $HOME/.takoma.json
parse_vars_for_environment()
{
    aws_access_key_id=$(cat $TAKOMA_CONFIG|jq '.'$environment'.aws_access_key_id'|tr -d '"')
    aws_secret_access_key=$(cat $TAKOMA_CONFIG|jq '.'$environment'.aws_secret_access_key'|tr -d '"')
    region=$(cat $TAKOMA_CONFIG|jq '.'$environment'.region'|tr -d '"')
    aws_identity_file=$(cat $TAKOMA_CONFIG|jq '.'$environment'.aws_identity_file'|tr -d '"')
}

switch_aws_credentials()
{
	cat << EOF > $HOME/.aws/credentials
# This file was automatically generated by Takoma $TAKOMA_VERSION at $(date)
# environment: $environment
[default]
aws_access_key_id = $aws_access_key_id
aws_secret_access_key = $aws_secret_access_key
region = $region
EOF
}

switch_boto_credentials()
{
	cat << EOF > $HOME/.boto
# This file was automatically generated by Takoma $TAKOMA_VERSION at $(date)
# environment: $environment
[Credentials]
aws_access_key_id = $aws_access_key_id
aws_secret_access_key = $aws_secret_access_key
EOF
}

switch_fog_credentials()
{
	cat << EOF > $HOME/.fog
# This file was automatically generated by Takoma $TAKOMA_VERSION at $(date)
# environment: $environment

default:
   aws_access_key_id = $aws_access_key_id
   aws_secret_access_key = $aws_secret_access_key
EOF
}

switch_route53_credentials()
{
	cat << EOF > ~/.route53
---
access_key: $aws_access_key_id
secret_key: $aws_secret_access_key
api: '2011-05-05'
endpoint: https://route53.amazonaws.com/
default_ttl: '3600'
# This file was automatically generated by Takoma $TAKOMA_VERSION at $(date)
# environment: $environment
EOF
}


generate_default_takoma_json()
{
    cat << EOF > $TAKOMA_CONFIG
{
    "" : "This file was automatically generated by Takoma $TAKOMA_VERSION at $(date). You can remove this line",
    "project1": {
        "aws_identity_file": "$HOME/.ssh/project1.pem",
        "aws_access_key_id": "PUTHEREYOURACCESSKEYID",
        "aws_secret_access_key": "PUTHEREYOURAWSSECRETACCESSKEY",
        "repo": "$HOME/src/projects/project1"
    },
    "project2": {
        "aws_secret_access_key": "PUTHEREYOURAWSSECRETACCESSKEY",
        "aws_access_key_id": "PUTHEREYOURACCESSKEYID",
        "aws_identity_file": "$HOME/.ssh/project2.pem",
        "repo": "$HOME/src/projects/project2"
    }
}
EOF
}

subcommand=$1; shift
case "$subcommand" in
    help)
        show_usage_message
        ;;
    version)
        echo "Takoma version: " $TAKOMA_VERSION
        ;;
    list)
        package=$1; shift
        cat $TAKOMA_CONFIG | jq 'keys'|jq -r '.[]'
        ;;
    install)
        generate_default_takoma_json
        ;;
    current)
        cat $TAKOMA_CACHE
        ;;
    switch)
        environment=$1
        echo "Switching to environment:" $environment
        parse_vars_for_environment
        switch_aws_credentials
        # TODO switch_s3cmd_credentials
        switch_boto_credentials
        switch_fog_credentials
        switch_route53_credentials

        if [ -z $aws_identity_file ] ; then
           ssh-add $aws_identity_file
        fi

        echo $environment > $TAKOMA_CACHE
        ;;
    upgrade_from_tacoma)
      hash yq 2>/dev/null || { echo >&2 "Takoma needs 'yq' to be convert from tacoma.  Aborting."; exit 1; }

      read -p "Where is your tacoma yaml file? [$HOME/.tacoma.yml]" tacoma_file
      tacoma_file=${tacoma_file:-$HOME/.tacoma.yml}
      echo "Converting YAML to JSON"
      cat $tacoma_file | yq r - -j | jq . > $TAKOMA_CONFIG
esac
